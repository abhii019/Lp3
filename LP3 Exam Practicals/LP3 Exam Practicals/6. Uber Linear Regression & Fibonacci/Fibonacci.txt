#DAA 1 - Fibonacci Numbers

def fibonacci_non_recursive(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    a, b = 0, 1
    for i in range(2, n + 1):
        fib = a + b
        a = b
        b = fib
    return b

def fibonacci_recursive(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)

# Taking user input
n = int(input("Enter a number: "))

print("Non-recursive Fibonacci result for the following number is:", fibonacci_non_recursive(n))
print("Recursive Fibonacci result for the following number is::", fibonacci_recursive(n))














public class Daa1 {
    public static void main(String[] args) {
        int n = 10; // Example: Calculate the first 10 Fibonacci numbers

        // Iterative Fibonacci
        int[] fib = new int[n];
        fib[0] = 0;
        fib[1] = 1;
        for (int i = 2; i < n; i++) {
            fib[i] = fib[i - 1] + fib[i - 2];
        }
        // Print iterative Fibonacci sequence
        System.out.println("Iterative Fibonacci:");
        for (int i = 0; i < n; i++) {
            System.out.print(fib[i] + " ");
        }
        System.out.println(); // For a new line
        // Recursive Fibonacci
        System.out.println("Recursive Fibonacci:");
        for (int i = 0; i < n; i++) {
            System.out.print(fibonacci(i) + " ");
        }
    }

    // Method for recursive Fibonacci calculation
    public static int fibonacci(int n) {
        if (n <= 1) {
            return n;
        }
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

